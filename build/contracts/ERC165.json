{
  "contractName": "ERC165",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.1;\n\n/**\n * @dev A standard for detecting smart contract interfaces. \n * See: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md.\n */\ninterface ERC165\n{\n\n  /**\n   * @dev Checks if the smart contract includes a specific interface.\n   * @notice This function uses less than 30,000 gas.\n   * @param _interfaceID The interface identifier, as specified in ERC-165.\n   * @return True if _interfaceID is supported, false otherwise.\n   */\n  function supportsInterface(\n    bytes4 _interfaceID\n  )\n    external\n    view\n    returns (bool);\n    \n}\n",
  "sourcePath": "@0xcert/ethereum-erc721/src/contracts/utils/erc165.sol",
  "ast": {
    "absolutePath": "@0xcert/ethereum-erc721/src/contracts/utils/erc165.sol",
    "exportedSymbols": {
      "ERC165": [
        1024
      ]
    },
    "id": 1025,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1016,
        "literals": [
          "solidity",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:7"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev A standard for detecting smart contract interfaces. \nSee: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md.",
        "fullyImplemented": false,
        "id": 1024,
        "linearizedBaseContracts": [
          1024
        ],
        "name": "ERC165",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Checks if the smart contract includes a specific interface.\n@notice This function uses less than 30,000 gas.\n@param _interfaceID The interface identifier, as specified in ERC-165.\n@return True if _interfaceID is supported, false otherwise.",
            "id": 1023,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1018,
                  "name": "_interfaceID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "494:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1017,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "488:29:7"
            },
            "returnParameters": {
              "id": 1022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1021,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "553:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1020,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:6:7"
            },
            "scope": 1024,
            "src": "462:97:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1025,
        "src": "163:403:7"
      }
    ],
    "src": "0:567:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "@0xcert/ethereum-erc721/src/contracts/utils/erc165.sol",
      "exportedSymbols": {
        "ERC165": [
          1024
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".1"
          ]
        },
        "id": 1016,
        "name": "PragmaDirective",
        "src": "0:22:7"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "documentation": "@dev A standard for detecting smart contract interfaces. \nSee: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md.",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            1024
          ],
          "name": "ERC165",
          "scope": 1025
        },
        "children": [
          {
            "attributes": {
              "body": null,
              "documentation": "@dev Checks if the smart contract includes a specific interface.\n@notice This function uses less than 30,000 gas.\n@param _interfaceID The interface identifier, as specified in ERC-165.\n@return True if _interfaceID is supported, false otherwise.",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "supportsInterface",
              "scope": 1024,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_interfaceID",
                      "scope": 1023,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes4",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes4",
                          "type": "bytes4"
                        },
                        "id": 1017,
                        "name": "ElementaryTypeName",
                        "src": "494:6:7"
                      }
                    ],
                    "id": 1018,
                    "name": "VariableDeclaration",
                    "src": "494:19:7"
                  }
                ],
                "id": 1019,
                "name": "ParameterList",
                "src": "488:29:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1023,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1020,
                        "name": "ElementaryTypeName",
                        "src": "553:4:7"
                      }
                    ],
                    "id": 1021,
                    "name": "VariableDeclaration",
                    "src": "553:4:7"
                  }
                ],
                "id": 1022,
                "name": "ParameterList",
                "src": "552:6:7"
              }
            ],
            "id": 1023,
            "name": "FunctionDefinition",
            "src": "462:97:7"
          }
        ],
        "id": 1024,
        "name": "ContractDefinition",
        "src": "163:403:7"
      }
    ],
    "id": 1025,
    "name": "SourceUnit",
    "src": "0:567:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2021-12-29T10:56:57.056Z",
  "devdoc": {
    "details": "A standard for detecting smart contract interfaces.  See: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md.",
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "Checks if the smart contract includes a specific interface.",
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165."
        },
        "return": "True if _interfaceID is supported, false otherwise."
      }
    }
  },
  "userdoc": {
    "methods": {
      "supportsInterface(bytes4)": {
        "notice": "This function uses less than 30,000 gas."
      }
    }
  }
}