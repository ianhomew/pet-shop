{
  "contractName": "EGGNft",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "minters",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "adopt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNextMintIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNextMintIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_approved\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"adopt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"minters\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"_symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT. This function can be changed to payable.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"},\"return\":\"Balance of _owner.\"},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"},\"return\":\"Address that _tokenId is approved for. \"},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"},\"return\":\"True if approved for all, false otherwise.\"},\"name()\":{\"details\":\"Returns a descriptive name for a collection of NFTokens.\",\"return\":\"Representing name. \"},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"},\"return\":\"Address of _tokenId owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"return\":\"True if _interfaceID is supported, false otherwise.\"},\"symbol()\":{\"details\":\"Returns an abbreviated name for NFTokens.\",\"return\":\"Representing symbol. \"},\"tokenURI(uint256)\":{\"details\":\"A distinct URI (RFC 3986) for a given NFT.\",\"params\":{\"_tokenId\":\"Id for which we want uri.\"},\"return\":\"URI of _tokenId.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\"\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/EGGNft.sol\":\"EGGNft\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@0xcert/ethereum-erc721/src/contracts/math/safe-math.sol\":{\"keccak256\":\"0x2de2508ddfd5391d14292a745ae96d85c6f710bbec3c280038e8f591d4643b8f\",\"urls\":[\"bzzr://3e80a996979766e4c552eb34c72bde6ebaa56e5649c90285a55609a93c7a41a3\"]},\"@0xcert/ethereum-erc721/src/contracts/tokens/erc721-metadata.sol\":{\"keccak256\":\"0xe767537fa32f8a3a4f86eb35e81e9d38b2442afded0eb56022eec80222f4712e\",\"urls\":[\"bzzr://c84f32f2892010b33d1b4f3ecc180eb829cc32c7c653b37d51c3d29af174ba17\"]},\"@0xcert/ethereum-erc721/src/contracts/tokens/erc721-token-receiver.sol\":{\"keccak256\":\"0x472e520e291772c747b13c9a7ef1c985ce8d79810ac3b63ef44cbf5939fec92c\",\"urls\":[\"bzzr://ee2650665d1d3a2b98f8b96004adf5329e006801ff8b05e0541bc7d01153eeea\"]},\"@0xcert/ethereum-erc721/src/contracts/tokens/erc721.sol\":{\"keccak256\":\"0x8aca1d2db3210e695c1a6be3df517e7370f47ebf340751f4f4c74c78ae8e82bc\",\"urls\":[\"bzzr://ad83a4a119a99bfce9ba5c0d2f529de7d010206c5beef0017c836ab3be6ddd80\"]},\"@0xcert/ethereum-erc721/src/contracts/tokens/nf-token-metadata.sol\":{\"keccak256\":\"0x70b855ccf0fc03aada0953211b2ed77a25e98e2ccd22a150f48646a6647b399a\",\"urls\":[\"bzzr://f7ad684c93cf628df2bd807708ecbdd7c95d8eda37fa74a52f2175b5e49b63e7\"]},\"@0xcert/ethereum-erc721/src/contracts/tokens/nf-token.sol\":{\"keccak256\":\"0x5122c85ddeead9cf309472ca9f9fe914bb6d03f2dc8c4b621cf2a6908453ec45\",\"urls\":[\"bzzr://c6967b6889e7f349f2ed08736736d8ea46c9e440518d6ccbec8b8e3e2bb0868d\"]},\"@0xcert/ethereum-erc721/src/contracts/utils/address-utils.sol\":{\"keccak256\":\"0xcb3882e392740906cdccde8a0bde1bfd6196a54d6eb4ecfb2409e92dfa0ab773\",\"urls\":[\"bzzr://a6dc2f5388d7443d9473b2ec8ae53d3ec776f37e4cf807e5f2fadb25b7625e0d\"]},\"@0xcert/ethereum-erc721/src/contracts/utils/erc165.sol\":{\"keccak256\":\"0xefa117307212ceeec08547fdf899e72d0ef1791bd662cd90ac71124c90a3b440\",\"urls\":[\"bzzr://3b794fd6353b6efe1c6067e995e66a1864efb5333b94170f5ea1ec4b6ca893a3\"]},\"@0xcert/ethereum-erc721/src/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0xd0d163c85ad038fbc26da9368a36324b357faa3050ac79866cb2722219506519\",\"urls\":[\"bzzr://84ae925338efd1538ab2a2484f53c4791b0c8ddbe9d727066c9526e04b7380d9\"]},\"project:/contracts/EGGNft.sol\":{\"keccak256\":\"0x8f2259a5c3cd896cc3bfd288e9b14d3c7c64d335577c681dde0a1b790a9318d3\",\"urls\":[\"bzzr://396eb24e48cb2fa316897b272ffc5fba503161b18af2f407fae98c746052faad\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100eb576000357c01000000000000000000000000000000000000000000000000000000009004806301ffc9a7146100f057806303fcdf291461016257806306fdde031461018d578063081812fc1461021d578063095ea7b31461029857806318160ddd146102f357806323b872dd1461031e57806342842e0e14610399578063566fc123146104145780636352211e146104ae57806370a08231146105295780638623ec7b1461058e57806395d89b4114610609578063a22cb46514610699578063b88d4fde146106f6578063c87b56dd146107c6578063e985e9c51461087a575b600080fd5b3480156100fc57600080fd5b506101486004803603602081101561011357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610903565b604051808215151515815260200191505060405180910390f35b34801561016e57600080fd5b5061017761096a565b6040518082815260200191505060405180910390f35b34801561019957600080fd5b506101a2610974565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101e25780820151818401526020810190506101c7565b50505050905090810190601f16801561020f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022957600080fd5b506102566004803603602081101561024057600080fd5b8101908080359060200190929190505050610a16565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102a457600080fd5b506102f1600480360360408110156102bb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ac4565b005b3480156102ff57600080fd5b50610308610d60565b6040518082815260200191505060405180910390f35b34801561032a57600080fd5b506103976004803603606081101561034157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d6a565b005b3480156103a557600080fd5b50610412600480360360608110156103bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611008565b005b34801561042057600080fd5b506104986004803603602081101561043757600080fd5b810190808035906020019064010000000081111561045457600080fd5b82018360208201111561046657600080fd5b8035906020019184600183028401116401000000008311171561048857600080fd5b9091929391929390505050611029565b6040518082815260200191505060405180910390f35b3480156104ba57600080fd5b506104e7600480360360208110156104d157600080fd5b8101908080359060200190929190505050611170565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053557600080fd5b506105786004803603602081101561054c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111e9565b6040518082815260200191505060405180910390f35b34801561059a57600080fd5b506105c7600480360360208110156105b157600080fd5b8101908080359060200190929190505050611236565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561061557600080fd5b5061061e61126b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561065e578082015181840152602081019050610643565b50505050905090810190601f16801561068b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106a557600080fd5b506106f4600480360360408110156106bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061130d565b005b34801561070257600080fd5b506107c46004803603608081101561071957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561078057600080fd5b82018360208201111561079257600080fd5b803590602001918460018302840111640100000000831117156107b457600080fd5b909192939192939050505061140e565b005b3480156107d257600080fd5b506107ff600480360360208110156107e957600080fd5b8101908080359060200190929190505050611465565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561083f578082015181840152602081019050610824565b50505050905090810190601f16801561086c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561088657600080fd5b506108e96004803603604081101561089d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061158b565b604051808215151515815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000601854905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a0c5780601f106109e157610100808354040283529160200191610a0c565b820191906000526020600020905b8154815290600101906020018083116109ef57829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610a8857600080fd5b6002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610bbd5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610bc857600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610c3857600080fd5b60006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515610cab57600080fd5b856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000601954905090565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610e3b57503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610ecc5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b1515610ed757600080fd5b82600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515610f4757600080fd5b60006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515610fb957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614151515610ff557600080fd5b610fff868661161f565b50505050505050565b61102483838360206040519081016040528060008152506116d4565b505050565b6000600f601854111515156110a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f4d696e742046696e69736865640000000000000000000000000000000000000081525060200191505060405180910390fd5b60006110f93360185486868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611b8b565b90506111116001601854611bab90919063ffffffff16565b6018819055503360088260108110151561112757fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508091505092915050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156111e457600080fd5b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561122657600080fd5b61122f82611bc7565b9050919050565b60088160108110151561124557fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113035780601f106112d857610100808354040283529160200191611303565b820191906000526020600020905b8154815290600101906020018083116112e657829003601f168201915b5050505050905090565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b61145e85858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506116d4565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156114d757600080fd5b600760008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561157e5780601f106115535761010080835404028352916020019161157e565b820191906000526020600020905b81548152906001019060200180831161156157829003601f168201915b5050505050915050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061166082611c10565b61166a8183611cb3565b6116748383611de0565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806117a557503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806118365750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b151561184157600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156118b157600080fd5b60006001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561192357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415151561195f57600080fd5b611969878761161f565b6119888773ffffffffffffffffffffffffffffffffffffffff16611f3a565b15611b815760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611a84578082015181840152602081019050611a69565b50505050905090810190601f168015611ab15780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611ad357600080fd5b505af1158015611ae7573d6000803e3d6000fd5b505050506040513d6020811015611afd57600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515611b7f57600080fd5b505b5050505050505050565b6000611b978484611f4d565b611ba18383612061565b8290509392505050565b60008183019050828110151515611bc157600080fd5b92915050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611cb0576002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b50565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611d2057600080fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611e4e57600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ef36001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bab90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611f8957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611ff757600080fd5b6120018282611de0565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b81600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156120d157600080fd5b816007600085815260200190815260200160002090805190602001906120f89291906120fe565b50505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061213f57805160ff191683800117855561216d565b8280016001018555821561216d579182015b8281111561216c578251825591602001919060010190612151565b5b50905061217a919061217e565b5090565b6121a091905b8082111561219c576000816000905550600101612184565b5090565b9056fea165627a7a72305820114e124e9b4598e995fc29779031ab72997953e206482da719acbcb2bcb7cd1f0029",
  "sourceMap": "502:913:10:-;;;661:99;8:9:-1;5:2;;;30:1;27;20:12;5:2;661:99:10;455:4:8;421:19;:31;441:10;421:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;3917:4:5;3883:19;:31;3903:10;3883:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;721:4:4;687:19;:31;707:10;687:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;688:20:10;;;;;;;;;;;;;;;;;;:7;:20;;;;;;;;;;;;:::i;:::-;;714:18;;;;;;;;;;;;;;;;;;:9;:18;;;;;;;;;;;;:::i;:::-;;753:2;738:12;:17;;;;502:913;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "502:913:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:150:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;677:150:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;677:150:8;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1242:85:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1242:85:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;864:100:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;864:100:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;864:100:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8855:161:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8855:161:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8855:161:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6816:316;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6816:316:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6816:316:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1331:82:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1331:82:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6104:300:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6104:300:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6104:300:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5381:157;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5381:157:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5381:157:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;765:279:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;765:279:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;765:279:10;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;765:279:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;765:279:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;765:279:10;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8448:170:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8448:170:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8448:170:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8030:167;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8030:167:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8030:167:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;571:26:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;571:26:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;571:26:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1067:108:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1067:108:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1067:108:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7534:210:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7534:210:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7534:210:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4796:186;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4796:186:5;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4796:186:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4796:186:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4796:186:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4796:186:5;;;;;;;;;;;;:::i;:::-;;1321:158:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1321:158:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1321:158:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1321:158:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9277:169:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9277:169:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9277:169:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;677:150:8;768:4;789:19;:33;809:12;789:33;;;;;;;;;;;;;;;;;;;;;;;;;;;782:40;;677:150;;;:::o;1242:85:10:-;1290:4;1309:13;;1302:20;;1242:85;:::o;864:100:4:-;915:19;952:7;944:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;864:100;:::o;8855:161:5:-;8964:7;8941:8;3787:1;3756:33;;:9;:19;3766:8;3756:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3748:42;;;;;;;;8988:13;:23;9002:8;8988:23;;;;;;;;;;;;;;;;;;;;;8981:30;;8855:161;;;;:::o;6816:316::-;6910:8;3051:18;3072:9;:19;3082:8;3072:19;;;;;;;;;;;;;;;;;;;;;3051:40;;3119:10;3105:24;;:10;:24;;;:68;;;;3133:16;:28;3150:10;3133:28;;;;;;;;;;;;;;;:40;3162:10;3133:40;;;;;;;;;;;;;;;;;;;;;;;;;3105:68;3097:77;;;;;;;;6937:8;3787:1;3756:33;;:9;:19;3766:8;3756:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3748:42;;;;;;;;6955:18;6976:9;:19;6986:8;6976:19;;;;;;;;;;;;;;;;;;;;;6955:40;;7022:10;7009:23;;:9;:23;;;;7001:32;;;;;;;;7066:9;7040:13;:23;7054:8;7040:23;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;7118:8;7107:9;7086:41;;7095:10;7086:41;;;;;;;;;;;;3796:1;3180;6816:316;;;;:::o;1331:82:10:-;1375:4;1396:12;;1389:19;;1331:82;:::o;6104:300:5:-;6217:8;3375:18;3396:9;:19;3406:8;3396:19;;;;;;;;;;;;;;;;;;;;;3375:40;;3450:10;3436:24;;:10;:24;;;:71;;;;3497:10;3470:37;;:13;:23;3484:8;3470:23;;;;;;;;;;;;;;;;;;;;;:37;;;3436:71;:121;;;;3517:16;:28;3534:10;3517:28;;;;;;;;;;;;;;;:40;3546:10;3517:40;;;;;;;;;;;;;;;;;;;;;;;;;3436:121;3421:142;;;;;;;;6244:8;3787:1;3756:33;;:9;:19;3766:8;3756:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3748:42;;;;;;;;6262:18;6283:9;:19;6293:8;6283:19;;;;;;;;;;;;;;;;;;;;;6262:40;;6330:5;6316:19;;:10;:19;;;6308:28;;;;;;;;6365:1;6350:17;;:3;:17;;;;6342:26;;;;;;;;6375:24;6385:3;6390:8;6375:9;:24::i;:::-;3796:1;3569;6104:300;;;;;:::o;5381:157::-;5490:43;5508:5;5515:3;5520:8;5490:43;;;;;;;;;;;;;:17;:43::i;:::-;5381:157;;;:::o;765:279:10:-;820:7;860:2;843:13;;:19;;835:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;886:15;904:37;909:10;921:13;;936:4;;904:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;904:37:10;;;;;;:4;:37::i;:::-;886:55;;963:20;981:1;963:13;;:17;;:20;;;;:::i;:::-;947:13;:36;;;;1008:10;989:7;997;989:16;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1032:7;1025:14;;;765:279;;;;:::o;8448:170:5:-;8526:14;8559:9;:19;8569:8;8559:19;;;;;;;;;;;;;;;;;;;;;8550:28;;8610:1;8592:20;;:6;:20;;;;8584:29;;;;;;;;8448:170;;;:::o;8030:167::-;8108:7;8151:1;8133:20;;:6;:20;;;;8125:29;;;;;;;;8167:25;8185:6;8167:17;:25::i;:::-;8160:32;;8030:167;;;:::o;571:26:10:-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1067:108:4:-;1120:21;1161:9;1151:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1067:108;:::o;7534:210:5:-;7671:9;7629:16;:28;7646:10;7629:28;;;;;;;;;;;;;;;:39;7658:9;7629:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;7718:9;7691:48;;7706:10;7691:48;;;7729:9;7691:48;;;;;;;;;;;;;;;;;;;;;;7534:210;;:::o;4796:186::-;4931:46;4949:5;4956:3;4961:8;4971:5;;4931:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4931:46:5;;;;;;:17;:46::i;:::-;4796:186;;;;;:::o;1321:158:4:-;1427:13;1404:8;3787:1:5;3756:33;;:9;:19;3766:8;3756:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3748:42;;;;;;;;1457:7:4;:17;1465:8;1457:17;;;;;;;;;;;1450:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1321:158;;;;:::o;9277:169:5:-;9385:4;9406:16;:24;9423:6;9406:24;;;;;;;;;;;;;;;:35;9431:9;9406:35;;;;;;;;;;;;;;;;;;;;;;;;;9399:42;;9277:169;;;;:::o;9629:262::-;9712:12;9727:9;:19;9737:8;9727:19;;;;;;;;;;;;;;;;;;;;;9712:34;;9752:24;9767:8;9752:14;:24::i;:::-;9783:30;9798:4;9804:8;9783:14;:30::i;:::-;9819:26;9831:3;9836:8;9819:11;:26::i;:::-;9877:8;9872:3;9857:29;;9866:4;9857:29;;;;;;;;;;;;9629:262;;;:::o;12753:520::-;12894:8;3375:18;3396:9;:19;3406:8;3396:19;;;;;;;;;;;;;;;;;;;;;3375:40;;3450:10;3436:24;;:10;:24;;;:71;;;;3497:10;3470:37;;:13;:23;3484:8;3470:23;;;;;;;;;;;;;;;;;;;;;:37;;;3436:71;:121;;;;3517:16;:28;3534:10;3517:28;;;;;;;;;;;;;;;:40;3546:10;3517:40;;;;;;;;;;;;;;;;;;;;;;;;;3436:121;3421:142;;;;;;;;12921:8;3787:1;3756:33;;:9;:19;3766:8;3756:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3748:42;;;;;;;;12939:18;12960:9;:19;12970:8;12960:19;;;;;;;;;;;;;;;;;;;;;12939:40;;13007:5;12993:19;;:10;:19;;;12985:28;;;;;;;;13042:1;13027:17;;:3;:17;;;;13019:26;;;;;;;;13052:24;13062:3;13067:8;13052:9;:24::i;:::-;13087:16;:3;:14;;;:16::i;:::-;13083:186;;;13118:13;13154:3;13134:41;;;13176:10;13188:5;13195:8;13205:5;13134:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13134:77:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13134:77:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13134:77:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13134:77:5;;;;;;;;;;;;;;;;13118:93;;599:10;13237:24;;13227:34;;;:6;:34;;;;13219:43;;;;;;;;13083:186;;3796:1;3569;12753:520;;;;;;:::o;1047:191:10:-;1130:7;1145:26;1157:3;1162:8;1145:11;:26::i;:::-;1177:34;1196:8;1206:4;1177:18;:34::i;:::-;1225:8;1218:15;;1047:191;;;;;:::o;2069:177:0:-;2165:11;2203:8;2192;:19;2186:25;;2232:8;2225:3;:15;;2217:24;;;;;;;;2069:177;;;;:::o;12342:142:5:-;12428:7;12452:19;:27;12472:6;12452:27;;;;;;;;;;;;;;;;12445:34;;12342:142;;;:::o;13401:166::-;13510:1;13475:37;;:13;:23;13489:8;13475:23;;;;;;;;;;;;;;;;;;;;;:37;;;;13471:92;;;13533:13;:23;13547:8;13533:23;;;;;;;;;;;;13526:30;;;;;;;;;;;13471:92;13401:166;:::o;11338:229::-;11459:5;11436:28;;:9;:19;11446:8;11436:19;;;;;;;;;;;;;;;;;;;;;:28;;;11428:37;;;;;;;;11529:1;11500:19;:26;11520:5;11500:26;;;;;;;;;;;;;;;;:30;11471:19;:26;11491:5;11471:26;;;;;;;;;;;;;;;:59;;;;11543:9;:19;11553:8;11543:19;;;;;;;;;;;;11536:26;;;;;;;;;;;11338:229;;:::o;11826:228::-;11950:1;11919:33;;:9;:19;11929:8;11919:19;;;;;;;;;;;;;;;;;;;;;:33;;;11911:42;;;;;;;;11982:3;11960:9;:19;11970:8;11960:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12018:31;12047:1;12018:19;:24;12038:3;12018:24;;;;;;;;;;;;;;;;:28;;:31;;;;:::i;:::-;11991:19;:24;12011:3;11991:24;;;;;;;;;;;;;;;:58;;;;11826:228;;:::o;280:596:6:-;358:17;385:12;811:5;799:18;791:26;;870:1;863:4;:8;848:23;;280:596;;;;:::o;10273:238:5:-;10375:1;10360:17;;:3;:17;;;;10352:26;;;;;;;;10423:1;10392:33;;:9;:19;10402:8;10392:19;;;;;;;;;;;;;;;;;;;;;:33;;;10384:42;;;;;;;;10433:26;10445:3;10450:8;10433:11;:26::i;:::-;10497:8;10492:3;10471:35;;10488:1;10471:35;;;;;;;;;;;;10273:238;;:::o;2345:149:4:-;2447:8;3787:1:5;3756:33;;:9;:19;3766:8;3756:19;;;;;;;;;;;;;;;;;;;;;:33;;;;3748:42;;;;;;;;2485:4:4;2465:7;:17;2473:8;2465:17;;;;;;;;;;;:24;;;;;;;;;;;;:::i;:::-;;2345:149;;;:::o;502:913:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\n// import \"https://github.com/nibbstack/erc721/blob/v2/src/contracts/tokens/nf-token-metadata.sol\";\nimport \"@0xcert/ethereum-erc721/src/contracts/tokens/nf-token-metadata.sol\";\nimport \"@0xcert/ethereum-erc721/src/contracts/math/safe-math.sol\";\n// import \"https://github.com/nibbstack/erc721/blob/v2/src/contracts/tokens/nf-token-metadata.sol\";\n// import \"https://github.com/nibbstack/erc721/blob/v2/src/contracts/math/safe-math.sol\";\n \ncontract EGGNft is NFTokenMetadata {\n  using SafeMath for uint;\n  \n  address[16] public minters;\n  uint private nextMintIndex;\n  uint private _totalSupply;\n\n  constructor() public {\n    nftName = \"Baby Egg\";\n    nftSymbol = \"BEGG\";\n    _totalSupply = 16;\n  }\n \n  function adopt(string calldata _uri) external returns (uint256) {\n    require(nextMintIndex <= 15, 'Mint Finished');\n    uint256 tokenId = mint(msg.sender, nextMintIndex, _uri);\n    nextMintIndex = nextMintIndex.add(1);\n    minters[tokenId] = msg.sender;\n\n    return tokenId;\n  }\n  function mint(address _to, uint256 _tokenId, string memory _uri) internal returns (uint256) {\n    super._mint(_to, _tokenId);\n    super._setTokenUri(_tokenId, _uri);\n\n    return _tokenId;\n  }\n\n  function getNextMintIndex() public view returns(uint) {\n    return nextMintIndex;\n  }\n\n  function totalSupply() public view returns (uint) {\n      return _totalSupply;\n  }\n}",
  "sourcePath": "/Users/monica/Documents/temp/pet-shop-tutorial/contracts/EGGNft.sol",
  "ast": {
    "absolutePath": "project:/contracts/EGGNft.sol",
    "exportedSymbols": {
      "EGGNft": [
        1218
      ]
    },
    "id": 1219,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1102,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:10"
      },
      {
        "absolutePath": "@0xcert/ethereum-erc721/src/contracts/tokens/nf-token-metadata.sol",
        "file": "@0xcert/ethereum-erc721/src/contracts/tokens/nf-token-metadata.sol",
        "id": 1103,
        "nodeType": "ImportDirective",
        "scope": 1219,
        "sourceUnit": 364,
        "src": "166:76:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0xcert/ethereum-erc721/src/contracts/math/safe-math.sol",
        "file": "@0xcert/ethereum-erc721/src/contracts/math/safe-math.sol",
        "id": 1104,
        "nodeType": "ImportDirective",
        "scope": 1219,
        "sourceUnit": 122,
        "src": "243:66:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1105,
              "name": "NFTokenMetadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 363,
              "src": "521:15:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTokenMetadata_$363",
                "typeString": "contract NFTokenMetadata"
              }
            },
            "id": 1106,
            "nodeType": "InheritanceSpecifier",
            "src": "521:15:10"
          }
        ],
        "contractDependencies": [
          141,
          257,
          363,
          993,
          1024,
          1056
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1218,
        "linearizedBaseContracts": [
          1218,
          363,
          141,
          993,
          1056,
          1024,
          257
        ],
        "name": "EGGNft",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1109,
            "libraryName": {
              "contractScope": null,
              "id": 1107,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 121,
              "src": "547:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$121",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "541:24:10",
            "typeName": {
              "id": 1108,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "560:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1113,
            "name": "minters",
            "nodeType": "VariableDeclaration",
            "scope": 1218,
            "src": "571:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$16_storage",
              "typeString": "address[16]"
            },
            "typeName": {
              "baseType": {
                "id": 1110,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "571:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1112,
              "length": {
                "argumentTypes": null,
                "hexValue": "3136",
                "id": 1111,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "579:2:10",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "16"
              },
              "nodeType": "ArrayTypeName",
              "src": "571:11:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$16_storage_ptr",
                "typeString": "address[16]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1115,
            "name": "nextMintIndex",
            "nodeType": "VariableDeclaration",
            "scope": 1218,
            "src": "601:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1114,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "601:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1117,
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 1218,
            "src": "631:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1116,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "631:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1132,
              "nodeType": "Block",
              "src": "682:78:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1120,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "688:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "4261627920456767",
                      "id": 1121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "698:10:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ebb1fd90769c5eb6b77c3586666af8084a0095a457221f76102f2f3803b7c989",
                        "typeString": "literal_string \"Baby Egg\""
                      },
                      "value": "Baby Egg"
                    },
                    "src": "688:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1123,
                  "nodeType": "ExpressionStatement",
                  "src": "688:20:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1124,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "714:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "42454747",
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "726:6:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_3f13a35740f6f6645ac069152f892d0ba4d355f6dec33aff0e33169875974978",
                        "typeString": "literal_string \"BEGG\""
                      },
                      "value": "BEGG"
                    },
                    "src": "714:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1127,
                  "nodeType": "ExpressionStatement",
                  "src": "714:18:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1128,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1117,
                      "src": "738:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3136",
                      "id": 1129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "753:2:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_16_by_1",
                        "typeString": "int_const 16"
                      },
                      "value": "16"
                    },
                    "src": "738:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1131,
                  "nodeType": "ExpressionStatement",
                  "src": "738:17:10"
                }
              ]
            },
            "documentation": null,
            "id": 1133,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "672:2:10"
            },
            "returnParameters": {
              "id": 1119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "682:0:10"
            },
            "scope": 1218,
            "src": "661:99:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1172,
              "nodeType": "Block",
              "src": "829:215:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1141,
                          "name": "nextMintIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1115,
                          "src": "843:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3135",
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "860:2:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        "src": "843:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d696e742046696e6973686564",
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "864:15:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_740c3c6266824c352c4683eef1fc47fceaddec4f4d8e7986ed587005ada9f33d",
                          "typeString": "literal_string \"Mint Finished\""
                        },
                        "value": "Mint Finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_740c3c6266824c352c4683eef1fc47fceaddec4f4d8e7986ed587005ada9f33d",
                          "typeString": "literal_string \"Mint Finished\""
                        }
                      ],
                      "id": 1140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1269,
                        1270
                      ],
                      "referencedDeclaration": 1270,
                      "src": "835:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "835:45:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "835:45:10"
                },
                {
                  "assignments": [
                    1148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1148,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1172,
                      "src": "886:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1147,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "886:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1155,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1266,
                          "src": "909:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "909:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1152,
                        "name": "nextMintIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1115,
                        "src": "921:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1153,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1135,
                        "src": "936:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 1149,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1201,
                      "src": "904:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,string memory) returns (uint256)"
                      }
                    },
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "904:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "886:55:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1156,
                      "name": "nextMintIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1115,
                      "src": "947:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "981:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1157,
                          "name": "nextMintIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1115,
                          "src": "963:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 98,
                        "src": "963:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "963:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "947:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1162,
                  "nodeType": "ExpressionStatement",
                  "src": "947:36:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1163,
                        "name": "minters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1113,
                        "src": "989:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$16_storage",
                          "typeString": "address[16] storage ref"
                        }
                      },
                      "id": 1165,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1164,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "997:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "989:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1166,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1266,
                        "src": "1008:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1008:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "989:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1169,
                  "nodeType": "ExpressionStatement",
                  "src": "989:29:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1170,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1148,
                    "src": "1032:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1139,
                  "id": 1171,
                  "nodeType": "Return",
                  "src": "1025:14:10"
                }
              ]
            },
            "documentation": null,
            "id": 1173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "adopt",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1135,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1173,
                  "src": "780:20:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1134,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "779:22:10"
            },
            "returnParameters": {
              "id": 1139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1138,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1173,
                  "src": "820:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "819:9:10"
            },
            "scope": 1218,
            "src": "765:279:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1200,
              "nodeType": "Block",
              "src": "1139:99:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1187,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1175,
                        "src": "1157:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1188,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "1162:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1184,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1300,
                        "src": "1145:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EGGNft_$1218",
                          "typeString": "contract super EGGNft"
                        }
                      },
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 795,
                      "src": "1145:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1145:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1190,
                  "nodeType": "ExpressionStatement",
                  "src": "1145:26:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1194,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "1196:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1195,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "1206:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1191,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1300,
                        "src": "1177:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EGGNft_$1218",
                          "typeString": "contract super EGGNft"
                        }
                      },
                      "id": 1193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setTokenUri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 362,
                      "src": "1177:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1197,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:34:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1198,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1177,
                    "src": "1225:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1183,
                  "id": 1199,
                  "nodeType": "Return",
                  "src": "1218:15:10"
                }
              ]
            },
            "documentation": null,
            "id": 1201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1175,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "1061:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1177,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "1074:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1179,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "1092:18:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1060:51:10"
            },
            "returnParameters": {
              "id": 1183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1182,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1201,
                  "src": "1130:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1130:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1129:9:10"
            },
            "scope": 1218,
            "src": "1047:191:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1208,
              "nodeType": "Block",
              "src": "1296:31:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1206,
                    "name": "nextMintIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1115,
                    "src": "1309:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1205,
                  "id": 1207,
                  "nodeType": "Return",
                  "src": "1302:20:10"
                }
              ]
            },
            "documentation": null,
            "id": 1209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNextMintIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1267:2:10"
            },
            "returnParameters": {
              "id": 1205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1204,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1209,
                  "src": "1290:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1203,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1290:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1289:6:10"
            },
            "scope": 1218,
            "src": "1242:85:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1216,
              "nodeType": "Block",
              "src": "1381:32:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1214,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1117,
                    "src": "1396:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1213,
                  "id": 1215,
                  "nodeType": "Return",
                  "src": "1389:19:10"
                }
              ]
            },
            "documentation": null,
            "id": 1217,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:2:10"
            },
            "returnParameters": {
              "id": 1213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1212,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1217,
                  "src": "1375:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1211,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1374:6:10"
            },
            "scope": 1218,
            "src": "1331:82:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1219,
        "src": "502:913:10"
      }
    ],
    "src": "32:1383:10"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/EGGNft.sol",
      "exportedSymbols": {
        "EGGNft": [
          1218
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 1102,
        "name": "PragmaDirective",
        "src": "32:32:10"
      },
      {
        "attributes": {
          "SourceUnit": 364,
          "absolutePath": "@0xcert/ethereum-erc721/src/contracts/tokens/nf-token-metadata.sol",
          "file": "@0xcert/ethereum-erc721/src/contracts/tokens/nf-token-metadata.sol",
          "scope": 1219,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1103,
        "name": "ImportDirective",
        "src": "166:76:10"
      },
      {
        "attributes": {
          "SourceUnit": 122,
          "absolutePath": "@0xcert/ethereum-erc721/src/contracts/math/safe-math.sol",
          "file": "@0xcert/ethereum-erc721/src/contracts/math/safe-math.sol",
          "scope": 1219,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1104,
        "name": "ImportDirective",
        "src": "243:66:10"
      },
      {
        "attributes": {
          "contractDependencies": [
            141,
            257,
            363,
            993,
            1024,
            1056
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1218,
            363,
            141,
            993,
            1056,
            1024,
            257
          ],
          "name": "EGGNft",
          "scope": 1219
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "NFTokenMetadata",
                  "referencedDeclaration": 363,
                  "type": "contract NFTokenMetadata"
                },
                "id": 1105,
                "name": "UserDefinedTypeName",
                "src": "521:15:10"
              }
            ],
            "id": 1106,
            "name": "InheritanceSpecifier",
            "src": "521:15:10"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 121,
                  "type": "library SafeMath"
                },
                "id": 1107,
                "name": "UserDefinedTypeName",
                "src": "547:8:10"
              },
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 1108,
                "name": "ElementaryTypeName",
                "src": "560:4:10"
              }
            ],
            "id": 1109,
            "name": "UsingForDirective",
            "src": "541:24:10"
          },
          {
            "attributes": {
              "constant": false,
              "name": "minters",
              "scope": 1218,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address[16]",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "address[16]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 1110,
                    "name": "ElementaryTypeName",
                    "src": "571:7:10"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "3136",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": null,
                      "value": "16"
                    },
                    "id": 1111,
                    "name": "Literal",
                    "src": "579:2:10"
                  }
                ],
                "id": 1112,
                "name": "ArrayTypeName",
                "src": "571:11:10"
              }
            ],
            "id": 1113,
            "name": "VariableDeclaration",
            "src": "571:26:10"
          },
          {
            "attributes": {
              "constant": false,
              "name": "nextMintIndex",
              "scope": 1218,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 1114,
                "name": "ElementaryTypeName",
                "src": "601:4:10"
              }
            ],
            "id": 1115,
            "name": "VariableDeclaration",
            "src": "601:26:10"
          },
          {
            "attributes": {
              "constant": false,
              "name": "_totalSupply",
              "scope": 1218,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 1116,
                "name": "ElementaryTypeName",
                "src": "631:4:10"
              }
            ],
            "id": 1117,
            "name": "VariableDeclaration",
            "src": "631:25:10"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 1218,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1118,
                "name": "ParameterList",
                "src": "672:2:10"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1119,
                "name": "ParameterList",
                "src": "682:0:10"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 267,
                              "type": "string storage ref",
                              "value": "nftName"
                            },
                            "id": 1120,
                            "name": "Identifier",
                            "src": "688:7:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4261627920456767",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Baby Egg\"",
                              "value": "Baby Egg"
                            },
                            "id": 1121,
                            "name": "Literal",
                            "src": "698:10:10"
                          }
                        ],
                        "id": 1122,
                        "name": "Assignment",
                        "src": "688:20:10"
                      }
                    ],
                    "id": 1123,
                    "name": "ExpressionStatement",
                    "src": "688:20:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 269,
                              "type": "string storage ref",
                              "value": "nftSymbol"
                            },
                            "id": 1124,
                            "name": "Identifier",
                            "src": "714:9:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "42454747",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"BEGG\"",
                              "value": "BEGG"
                            },
                            "id": 1125,
                            "name": "Literal",
                            "src": "726:6:10"
                          }
                        ],
                        "id": 1126,
                        "name": "Assignment",
                        "src": "714:18:10"
                      }
                    ],
                    "id": 1127,
                    "name": "ExpressionStatement",
                    "src": "714:18:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1117,
                              "type": "uint256",
                              "value": "_totalSupply"
                            },
                            "id": 1128,
                            "name": "Identifier",
                            "src": "738:12:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "3136",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 16",
                              "value": "16"
                            },
                            "id": 1129,
                            "name": "Literal",
                            "src": "753:2:10"
                          }
                        ],
                        "id": 1130,
                        "name": "Assignment",
                        "src": "738:17:10"
                      }
                    ],
                    "id": 1131,
                    "name": "ExpressionStatement",
                    "src": "738:17:10"
                  }
                ],
                "id": 1132,
                "name": "Block",
                "src": "682:78:10"
              }
            ],
            "id": 1133,
            "name": "FunctionDefinition",
            "src": "661:99:10"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "adopt",
              "scope": 1218,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_uri",
                      "scope": 1173,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1134,
                        "name": "ElementaryTypeName",
                        "src": "780:6:10"
                      }
                    ],
                    "id": 1135,
                    "name": "VariableDeclaration",
                    "src": "780:20:10"
                  }
                ],
                "id": 1136,
                "name": "ParameterList",
                "src": "779:22:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1173,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1137,
                        "name": "ElementaryTypeName",
                        "src": "820:7:10"
                      }
                    ],
                    "id": 1138,
                    "name": "VariableDeclaration",
                    "src": "820:7:10"
                  }
                ],
                "id": 1139,
                "name": "ParameterList",
                "src": "819:9:10"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_740c3c6266824c352c4683eef1fc47fceaddec4f4d8e7986ed587005ada9f33d",
                                  "typeString": "literal_string \"Mint Finished\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1269,
                                1270
                              ],
                              "referencedDeclaration": 1270,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1140,
                            "name": "Identifier",
                            "src": "835:7:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1115,
                                  "type": "uint256",
                                  "value": "nextMintIndex"
                                },
                                "id": 1141,
                                "name": "Identifier",
                                "src": "843:13:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3135",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 15",
                                  "value": "15"
                                },
                                "id": 1142,
                                "name": "Literal",
                                "src": "860:2:10"
                              }
                            ],
                            "id": 1143,
                            "name": "BinaryOperation",
                            "src": "843:19:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4d696e742046696e6973686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Mint Finished\"",
                              "value": "Mint Finished"
                            },
                            "id": 1144,
                            "name": "Literal",
                            "src": "864:15:10"
                          }
                        ],
                        "id": 1145,
                        "name": "FunctionCall",
                        "src": "835:45:10"
                      }
                    ],
                    "id": 1146,
                    "name": "ExpressionStatement",
                    "src": "835:45:10"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1148
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "tokenId",
                          "scope": 1172,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1147,
                            "name": "ElementaryTypeName",
                            "src": "886:7:10"
                          }
                        ],
                        "id": 1148,
                        "name": "VariableDeclaration",
                        "src": "886:15:10"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1201,
                              "type": "function (address,uint256,string memory) returns (uint256)",
                              "value": "mint"
                            },
                            "id": 1149,
                            "name": "Identifier",
                            "src": "904:4:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1266,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1150,
                                "name": "Identifier",
                                "src": "909:3:10"
                              }
                            ],
                            "id": 1151,
                            "name": "MemberAccess",
                            "src": "909:10:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1115,
                              "type": "uint256",
                              "value": "nextMintIndex"
                            },
                            "id": 1152,
                            "name": "Identifier",
                            "src": "921:13:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1135,
                              "type": "string calldata",
                              "value": "_uri"
                            },
                            "id": 1153,
                            "name": "Identifier",
                            "src": "936:4:10"
                          }
                        ],
                        "id": 1154,
                        "name": "FunctionCall",
                        "src": "904:37:10"
                      }
                    ],
                    "id": 1155,
                    "name": "VariableDeclarationStatement",
                    "src": "886:55:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1115,
                              "type": "uint256",
                              "value": "nextMintIndex"
                            },
                            "id": 1156,
                            "name": "Identifier",
                            "src": "947:13:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 98,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1115,
                                      "type": "uint256",
                                      "value": "nextMintIndex"
                                    },
                                    "id": 1157,
                                    "name": "Identifier",
                                    "src": "963:13:10"
                                  }
                                ],
                                "id": 1158,
                                "name": "MemberAccess",
                                "src": "963:17:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 1159,
                                "name": "Literal",
                                "src": "981:1:10"
                              }
                            ],
                            "id": 1160,
                            "name": "FunctionCall",
                            "src": "963:20:10"
                          }
                        ],
                        "id": 1161,
                        "name": "Assignment",
                        "src": "947:36:10"
                      }
                    ],
                    "id": 1162,
                    "name": "ExpressionStatement",
                    "src": "947:36:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1113,
                                  "type": "address[16] storage ref",
                                  "value": "minters"
                                },
                                "id": 1163,
                                "name": "Identifier",
                                "src": "989:7:10"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1148,
                                  "type": "uint256",
                                  "value": "tokenId"
                                },
                                "id": 1164,
                                "name": "Identifier",
                                "src": "997:7:10"
                              }
                            ],
                            "id": 1165,
                            "name": "IndexAccess",
                            "src": "989:16:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1266,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1166,
                                "name": "Identifier",
                                "src": "1008:3:10"
                              }
                            ],
                            "id": 1167,
                            "name": "MemberAccess",
                            "src": "1008:10:10"
                          }
                        ],
                        "id": 1168,
                        "name": "Assignment",
                        "src": "989:29:10"
                      }
                    ],
                    "id": 1169,
                    "name": "ExpressionStatement",
                    "src": "989:29:10"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1139
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1148,
                          "type": "uint256",
                          "value": "tokenId"
                        },
                        "id": 1170,
                        "name": "Identifier",
                        "src": "1032:7:10"
                      }
                    ],
                    "id": 1171,
                    "name": "Return",
                    "src": "1025:14:10"
                  }
                ],
                "id": 1172,
                "name": "Block",
                "src": "829:215:10"
              }
            ],
            "id": 1173,
            "name": "FunctionDefinition",
            "src": "765:279:10"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 1218,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_to",
                      "scope": 1201,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1174,
                        "name": "ElementaryTypeName",
                        "src": "1061:7:10"
                      }
                    ],
                    "id": 1175,
                    "name": "VariableDeclaration",
                    "src": "1061:11:10"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 1201,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1176,
                        "name": "ElementaryTypeName",
                        "src": "1074:7:10"
                      }
                    ],
                    "id": 1177,
                    "name": "VariableDeclaration",
                    "src": "1074:16:10"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_uri",
                      "scope": 1201,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1178,
                        "name": "ElementaryTypeName",
                        "src": "1092:6:10"
                      }
                    ],
                    "id": 1179,
                    "name": "VariableDeclaration",
                    "src": "1092:18:10"
                  }
                ],
                "id": 1180,
                "name": "ParameterList",
                "src": "1060:51:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1201,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1181,
                        "name": "ElementaryTypeName",
                        "src": "1130:7:10"
                      }
                    ],
                    "id": 1182,
                    "name": "VariableDeclaration",
                    "src": "1130:7:10"
                  }
                ],
                "id": 1183,
                "name": "ParameterList",
                "src": "1129:9:10"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_mint",
                              "referencedDeclaration": 795,
                              "type": "function (address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1300,
                                  "type": "contract super EGGNft",
                                  "value": "super"
                                },
                                "id": 1184,
                                "name": "Identifier",
                                "src": "1145:5:10"
                              }
                            ],
                            "id": 1186,
                            "name": "MemberAccess",
                            "src": "1145:11:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1175,
                              "type": "address",
                              "value": "_to"
                            },
                            "id": 1187,
                            "name": "Identifier",
                            "src": "1157:3:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1177,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 1188,
                            "name": "Identifier",
                            "src": "1162:8:10"
                          }
                        ],
                        "id": 1189,
                        "name": "FunctionCall",
                        "src": "1145:26:10"
                      }
                    ],
                    "id": 1190,
                    "name": "ExpressionStatement",
                    "src": "1145:26:10"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_setTokenUri",
                              "referencedDeclaration": 362,
                              "type": "function (uint256,string memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1300,
                                  "type": "contract super EGGNft",
                                  "value": "super"
                                },
                                "id": 1191,
                                "name": "Identifier",
                                "src": "1177:5:10"
                              }
                            ],
                            "id": 1193,
                            "name": "MemberAccess",
                            "src": "1177:18:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1177,
                              "type": "uint256",
                              "value": "_tokenId"
                            },
                            "id": 1194,
                            "name": "Identifier",
                            "src": "1196:8:10"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1179,
                              "type": "string memory",
                              "value": "_uri"
                            },
                            "id": 1195,
                            "name": "Identifier",
                            "src": "1206:4:10"
                          }
                        ],
                        "id": 1196,
                        "name": "FunctionCall",
                        "src": "1177:34:10"
                      }
                    ],
                    "id": 1197,
                    "name": "ExpressionStatement",
                    "src": "1177:34:10"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1183
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1177,
                          "type": "uint256",
                          "value": "_tokenId"
                        },
                        "id": 1198,
                        "name": "Identifier",
                        "src": "1225:8:10"
                      }
                    ],
                    "id": 1199,
                    "name": "Return",
                    "src": "1218:15:10"
                  }
                ],
                "id": 1200,
                "name": "Block",
                "src": "1139:99:10"
              }
            ],
            "id": 1201,
            "name": "FunctionDefinition",
            "src": "1047:191:10"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getNextMintIndex",
              "scope": 1218,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1202,
                "name": "ParameterList",
                "src": "1267:2:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1209,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1203,
                        "name": "ElementaryTypeName",
                        "src": "1290:4:10"
                      }
                    ],
                    "id": 1204,
                    "name": "VariableDeclaration",
                    "src": "1290:4:10"
                  }
                ],
                "id": 1205,
                "name": "ParameterList",
                "src": "1289:6:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1205
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1115,
                          "type": "uint256",
                          "value": "nextMintIndex"
                        },
                        "id": 1206,
                        "name": "Identifier",
                        "src": "1309:13:10"
                      }
                    ],
                    "id": 1207,
                    "name": "Return",
                    "src": "1302:20:10"
                  }
                ],
                "id": 1208,
                "name": "Block",
                "src": "1296:31:10"
              }
            ],
            "id": 1209,
            "name": "FunctionDefinition",
            "src": "1242:85:10"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "totalSupply",
              "scope": 1218,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1210,
                "name": "ParameterList",
                "src": "1351:2:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1217,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1211,
                        "name": "ElementaryTypeName",
                        "src": "1375:4:10"
                      }
                    ],
                    "id": 1212,
                    "name": "VariableDeclaration",
                    "src": "1375:4:10"
                  }
                ],
                "id": 1213,
                "name": "ParameterList",
                "src": "1374:6:10"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1213
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1117,
                          "type": "uint256",
                          "value": "_totalSupply"
                        },
                        "id": 1214,
                        "name": "Identifier",
                        "src": "1396:12:10"
                      }
                    ],
                    "id": 1215,
                    "name": "Return",
                    "src": "1389:19:10"
                  }
                ],
                "id": 1216,
                "name": "Block",
                "src": "1381:32:10"
              }
            ],
            "id": 1217,
            "name": "FunctionDefinition",
            "src": "1331:82:10"
          }
        ],
        "id": 1218,
        "name": "ContractDefinition",
        "src": "502:913:10"
      }
    ],
    "id": 1219,
    "name": "SourceUnit",
    "src": "32:1383:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xE238340Ca03F582df7eAd82E45e7891a5733D94F",
      "transactionHash": "0x75cfdd4e241e1fe7bdbf296927b08e37468f35ae8457ef50f950a7e99b8cfa11"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2021-12-30T04:16:55.260Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "return": "Balance of _owner."
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "return": "Address that _tokenId is approved for. "
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "return": "True if approved for all, false otherwise."
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens.",
        "return": "Representing name. "
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "return": "Address of _tokenId owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "return": "True if _interfaceID is supported, false otherwise."
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens.",
        "return": "Representing symbol. "
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        },
        "return": "URI of _tokenId."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
      }
    }
  }
}