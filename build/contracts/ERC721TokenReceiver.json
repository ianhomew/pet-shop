{
  "contractName": "ERC721TokenReceiver",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.1;\n\n/**\n * @dev ERC-721 interface for accepting safe transfers. \n * See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md.\n */\ninterface ERC721TokenReceiver\n{\n\n  /**\n   * @dev Handle the receipt of a NFT. The ERC721 smart contract calls this function on the\n   * recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return\n   * of other than the magic value MUST result in the transaction being reverted.\n   * Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing.\n   * @notice The contract address is always the message sender. A wallet/broker/auction application\n   * MUST implement the wallet interface if it will accept safe transfers.\n   * @param _operator The address which called `safeTransferFrom` function.\n   * @param _from The address which previously owned the token.\n   * @param _tokenId The NFT identifier which is being transferred.\n   * @param _data Additional data with no specified format.\n   * @return Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n   */\n  function onERC721Received(\n    address _operator,\n    address _from,\n    uint256 _tokenId,\n    bytes calldata _data\n  )\n    external\n    returns(bytes4);\n    \n}\n",
  "sourcePath": "@0xcert/ethereum-erc721/src/contracts/tokens/erc721-token-receiver.sol",
  "ast": {
    "absolutePath": "@0xcert/ethereum-erc721/src/contracts/tokens/erc721-token-receiver.sol",
    "exportedSymbols": {
      "ERC721TokenReceiver": [
        157
      ]
    },
    "id": 158,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 143,
        "literals": [
          "solidity",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev ERC-721 interface for accepting safe transfers. \nSee https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md.",
        "fullyImplemented": false,
        "id": 157,
        "linearizedBaseContracts": [
          157
        ],
        "name": "ERC721TokenReceiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Handle the receipt of a NFT. The ERC721 smart contract calls this function on the\nrecipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return\nof other than the magic value MUST result in the transaction being reverted.\nReturns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing.\n@notice The contract address is always the message sender. A wallet/broker/auction application\nMUST implement the wallet interface if it will accept safe transfers.\n@param _operator The address which called `safeTransferFrom` function.\n@param _from The address which previously owned the token.\n@param _tokenId The NFT identifier which is being transferred.\n@param _data Additional data with no specified format.\n@return Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
            "id": 156,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1148:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1171:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1171:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 149,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1190:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1190:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1212:20:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1142:94:2"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "1262:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1261:8:2"
            },
            "scope": 157,
            "src": "1117:153:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 158,
        "src": "158:1119:2"
      }
    ],
    "src": "0:1278:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "@0xcert/ethereum-erc721/src/contracts/tokens/erc721-token-receiver.sol",
      "exportedSymbols": {
        "ERC721TokenReceiver": [
          157
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".1"
          ]
        },
        "id": 143,
        "name": "PragmaDirective",
        "src": "0:22:2"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "documentation": "@dev ERC-721 interface for accepting safe transfers. \nSee https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md.",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            157
          ],
          "name": "ERC721TokenReceiver",
          "scope": 158
        },
        "children": [
          {
            "attributes": {
              "body": null,
              "documentation": "@dev Handle the receipt of a NFT. The ERC721 smart contract calls this function on the\nrecipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return\nof other than the magic value MUST result in the transaction being reverted.\nReturns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing.\n@notice The contract address is always the message sender. A wallet/broker/auction application\nMUST implement the wallet interface if it will accept safe transfers.\n@param _operator The address which called `safeTransferFrom` function.\n@param _from The address which previously owned the token.\n@param _tokenId The NFT identifier which is being transferred.\n@param _data Additional data with no specified format.\n@return Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "onERC721Received",
              "scope": 157,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_operator",
                      "scope": 156,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 144,
                        "name": "ElementaryTypeName",
                        "src": "1148:7:2"
                      }
                    ],
                    "id": 145,
                    "name": "VariableDeclaration",
                    "src": "1148:17:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_from",
                      "scope": 156,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 146,
                        "name": "ElementaryTypeName",
                        "src": "1171:7:2"
                      }
                    ],
                    "id": 147,
                    "name": "VariableDeclaration",
                    "src": "1171:13:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenId",
                      "scope": 156,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 148,
                        "name": "ElementaryTypeName",
                        "src": "1190:7:2"
                      }
                    ],
                    "id": 149,
                    "name": "VariableDeclaration",
                    "src": "1190:16:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_data",
                      "scope": 156,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 150,
                        "name": "ElementaryTypeName",
                        "src": "1212:5:2"
                      }
                    ],
                    "id": 151,
                    "name": "VariableDeclaration",
                    "src": "1212:20:2"
                  }
                ],
                "id": 152,
                "name": "ParameterList",
                "src": "1142:94:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 156,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes4",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes4",
                          "type": "bytes4"
                        },
                        "id": 153,
                        "name": "ElementaryTypeName",
                        "src": "1262:6:2"
                      }
                    ],
                    "id": 154,
                    "name": "VariableDeclaration",
                    "src": "1262:6:2"
                  }
                ],
                "id": 155,
                "name": "ParameterList",
                "src": "1261:8:2"
              }
            ],
            "id": 156,
            "name": "FunctionDefinition",
            "src": "1117:153:2"
          }
        ],
        "id": 157,
        "name": "ContractDefinition",
        "src": "158:1119:2"
      }
    ],
    "id": 158,
    "name": "SourceUnit",
    "src": "0:1278:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2021-12-29T10:56:57.046Z",
  "devdoc": {
    "details": "ERC-721 interface for accepting safe transfers.  See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md.",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "Handle the receipt of a NFT. The ERC721 smart contract calls this function on the recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted. Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing.",
        "params": {
          "_data": "Additional data with no specified format.",
          "_from": "The address which previously owned the token.",
          "_operator": "The address which called `safeTransferFrom` function.",
          "_tokenId": "The NFT identifier which is being transferred."
        },
        "return": "Returns `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`."
      }
    }
  },
  "userdoc": {
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "notice": "The contract address is always the message sender. A wallet/broker/auction application MUST implement the wallet interface if it will accept safe transfers."
      }
    }
  }
}